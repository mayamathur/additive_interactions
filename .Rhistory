scale_y_continuous(NULL)
ggplot(d=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw()
x.breaks = seq(.4,1,.05)
library(ggplot2)
ggplot(d=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total score, proportion") +
scale_x_continuous(breaks=x.breaks)
#scale_y_continuous(limits=c())
library(ggplot2)
ggplot(d=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=NULL)
x.breaks = seq(.4,1,.05)
library(ggplot2)
ggplot(d=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c(0,1))
library(ggplot2)
ggplot(d=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c())
head(d)
head(d)
p = d/q.totals
q.totals = d[1,]
q.totals
q.totals = d[1,][,2:12]
q.totals
q.totals = as.numeric( d[1,][,2:12] )
q.totals
head(d)
setwd("~/Dropbox/PhD Course for PHS/Quizzes/PHS2000B/Quiz1")
library(xlsx)
d = read.xlsx("Quiz 1 - Grade Breakdown.xlsx", 1, header=TRUE)
q.totals = as.numeric( d[1,][,2:12] )
q.totals
head(d)
q = d[,c(2:12)]
head(q)
p = q/q.totals
head(p)
aggregate(p,2,mean)
aggregate(p,p,mean)
?aggregate
colMeans(p)
colMeans(q)
q = d[,c(2:12)]
head(q)
p = t( t( q/q.totals ) )
head(p)
colMeans(p)
q.totals
p = t( t(q) / q.totals )
colMeans(p)
head(q)
q[3,]/q.totals
p[3,]
dim(p)
head(p)
dim(d)
setwd("~/Dropbox/PhD Course for PHS/Quizzes/PHS2000B/Quiz1")
library(xlsx)
d = read.xlsx("Quiz 1 - Grade Breakdown.xlsx", 1, header=TRUE)
q.totals = as.numeric( d[1,][,2:12] )
d = d[-c(1,40),]
dim(d)  # 38 students
# dataset with just questions
q = as.vector( d[,c(2:12)] )
p = t( t(q) / q.totals )
colMeans(p)
dim(p)
install.packages(reshape2)
install.packages("reshape2")
t(p)
p2 = melt(p)
library(reshape2)
p2 = melt(p)
head(p2)
dim(p2)
38*11
head(p)
names(p2) = c("id", "Question", "Percent")
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
theme_bw()
summary(p)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
theme_bw() + geom_jitter()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot(notch=TRUE) +
geom_jitter()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter()
plot = ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter()
dat <- ggplot_build(plot)$data[[1]]
plot + geom_segment(data=dat, aes(x=xmin, xend=xmax,
y=middle, yend=middle), colour="red", size=2)
plot = ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter()
dat <- ggplot_build(plot)$data[[1]]
colMeans(p)
data.frame( Mean = colMeans(p),
Topic = c("MSM", "Meas.Error", "Mediation", "Prop.Score", "Prop.Score", "Mediation", "Prop.Score", "Sensitivity", "MSM", "Interaction", "Sensitivity")
q2 = data.frame( Mean = colMeans(p),
Topic = c("MSM", "Meas.Error", "Mediation", "Prop.Score", "Prop.Score", "Mediation", "Prop.Score", "Sensitivity", "MSM", "Interaction", "Sensitivity")
q2
c("MSM", "Meas.Error", "Mediation", "Prop.Score", "Prop.Score", "Mediation", "Prop.Score", "Sensitivity", "MSM", "Interaction", "Sensitivity")
q2 = data.frame( Mean = colMeans(p),
Topic = c("MSM", "Meas.Error", "Mediation", "Prop.Score", "Prop.Score", "Mediation", "Prop.Score", "Sensitivity", "MSM", "Interaction", "Sensitivity") )
q2
q2 = data.frame( Mean = colMeans(p),
Topic = c("MSM", "Meas.Error", "Mediation", "Prop.Score", "Prop.Score", "Mediation", "Prop.Score", "Sensitivity", "MSM", "Interaction", "Sensitivity"),
Points.Worth = q.totals )
q2
q2 = q2[ order(q2$Mean), ]
q2
?aggregate
aggregate(q2, Topic, mean)
aggregate(Points.Worth ~ Topic, q2, sum)
head(d)
theshold = quantile(d$Total, .2)
threshold = quantile(d$Total, .2)
threshold
lows = d[ d$Total <= threshold,]
lows
lows = d[ d$Total <= threshold, c("Student", "Total")]
lows
lows = lows[ order(lows$Total), ]
lows
d$Total
median(d$Total)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c()) +
geom_vline(aes(xintercept=median(d$Total)),
color="red", linetype="dashed", size=1)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c()) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c()) + geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks)
scale_y_continuous(breaks=c()) +
geom_vline(aes(xintercept=median(d$Total)))
library(ggplot2)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
library(ggplot2)
ggplot(data=d, aes(x=Total)) + geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
scale_x_continuous(breaks=x.breaks) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
ylab("Proportion of students")
scale_x_continuous(breaks=x.breaks)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1)
geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", linetype="dashed", size=1) +
geom_dotplot(binwidth=.03) + theme_bw() +
xlab("Total exam score (proportion)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter()
colMeans(p)
head(p)
apply(p, 2, median)
apply(p, 2, mean)
colMeans(p)
t(colMeans(p))
t(matrix(colMeans(p)))
q.medians = apply(p, 2, median)
row.names(q.medians)
q.medians
names(q.medians)
temp = data.frame( Question=names(q.medians), Median=as.numeric(q.medians) )
temp
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter() +
geom_point( data=temp, aes(x=Question, y=Median) )
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) + geom_boxplot() +
geom_jitter() +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=2 )
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter() +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=2 )
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter() +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=2 ) + theme_bw()
geom_jitter
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=2 ) + theme_bw()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4 ) + theme_bw()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4 ) + theme_bw()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4, shape=1 ) + theme_bw()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4, shape=8 ) + theme_bw()
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4 ) + theme_bw() +
geom_jitter(alpha=0.3)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4 ) + theme_bw() +
geom_jitter(alpha=0.2)
?geom_jitter
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=4 ) + theme_bw() +
geom_point(alpha=0.2, size=4)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, shape=1 ) + theme_bw() +
geom_point(alpha=0.2, size=4)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) + theme_bw() +
geom_point(alpha=0.2, size=4)
q.medians = apply(p, 2, median)
q.means = apply(p, 2, mean)
med.df = data.frame( Question=names(q.medians), Median=as.numeric(q.medians), Mean=as.numeric(q.means) )
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.5 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
temp = data.frame( Question=names(q.medians), Median=as.numeric(q.medians), Mean=as.numeric(q.means) )
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.5 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
head(p2)
table(p2$Question)
?geom_dotplot
library(ggplot2)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.03, alpha=.2) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.02, alpha=.2) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.01, alpha=.2) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.02, alpha=.2) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks)
?stargazer
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.02) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks) +
scale_y_continuous(name = "", breaks = NA)
ggplot(data=d, aes(x=Total)) +
geom_vline(aes(xintercept=median(d$Total)), color="red", size=1) +
geom_vline(aes(xintercept=mean(d$Total)), color="blue", size=1) +
geom_dotplot(binwidth=.02) + theme_bw() +
xlab("Total exam score (proportion correct)") +
ylab("Proportion of students") +
scale_x_continuous(breaks=x.breaks) +
scale_y_continuous(name = "", breaks = NULL)
p2
?reorder
head(p2)
head(p)
q.means
p3 = merge(p2,q.medians)
head(p3)
dt = data.table(p2)
dt[,Mean=mean(Percent), by=Question]
library(data.table)
dt = data.table(p2)
dt[,Mean=mean(Percent), by=Question]
head(dt)
dt[ ,Mean := mean(Percent), by=Question]
head(dt)
p2 = as.data.frame(dt)
levels(p2$Question)
p2$Question = reorder(p2$Question, p2$Mean)
levels(p2$Questino)
levels(p2$Question)
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
p2$Question
p2$Question = reorder(p2$Question, p2$Mean)
# make plot with individual scores overlaid on question averages
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ggplot( data=p2, aes(x=as.factor(Question), y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
mode(ps$Question)
mode(p2$Question)
as.factor(p2$Question)
p2$Question = reorder( as.factor(p2$Question), p2$Mean )
mode(ps$Question)
mode(p2$Question)
p2$Question = as.factor(p2$Question)
mode(p2$Question)
p2$Question = factor(p2$Question)
mode(p2$Question)
p2$Question = as.character(p2$Question)
mode(p2$Question)
ggplot( data=p2, aes(x=as.factor(Question), y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ps$Question
p2$Question
levels(p2$Question)
p2$Question = factor(p2$Question)
p2$Question
p2$Question = reorder( p2$Question, p2$Mean )
p2$Question
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
head(p2)
ggplot( data=p2, aes(x=reorder(Question,Mean), y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
ggplot( data=p2, aes(x=reorder(factor(Question),Mean), y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
p2$Question
unique(p2$Question)
p2$Question = factor( p2$Question, levels=unique(p2$Question) )
p2$Question = factor( p2$Question, levels=unique(p2$Question) )
# make plot with individual scores overlaid on question averages
ggplot( data=p2, aes(x=Question, y=Percent, group=Question)) +
#geom_jitter(alpha=0.3) +
geom_point( data=temp, aes(x=Question, y=Median), color="red", size=6, alpha=.5 ) +
geom_point( data=temp, aes(x=Question, y=Mean), color="blue", size=6, alpha=.2 ) +
theme_bw() +
geom_point(alpha=0.2, size=4) +
ylab("Score (proportion correct)")
4/11
x=rnorm(10)
y=rnorm(10)
d = data.frame(x,y)
head(d)
model = lm(y~x, data=d)
model
d[11,]=c(100,100)
plot(d$x,d$y)
model = update(model, .~., data=d)
model
setwd("~/Dropbox/Personal computer/Independent studies/Epidemiology letter additive interactions/Additive interactions (linked to OSF)")
source("Additive interaction code v2.R")
beta0 = log(1)
betaE1 = log(0.95)
betaE2 = log(0.9)
betaE1E2 = log(0.67)
# for generation of Y
linpred = beta0 + betaE1*E1 + betaE2*E2 + betaE1E2*E1*E2
probs = exp(linpred) / (1 + exp(linpred))
set.seed(22)
Y = rbinom(n, size=1, p=probs)
# put in dataframe since the function will need to recode exposures
d = data.frame(E1, E2, Y)
n=5000
set.seed(451)
E1 = rbinom(n, size=1, p=0.2)  # generate a binary genetic exposure
set.seed(1984)
E2 = rbinom(n, size=1, p=.75)
# binary confounder that is correlated with both exposures
# linear predictor from which to generate C
linpred = 1 + 1.5*E1 + 2.2*E2
# expit to back-transform logits into probabilities
probs = exp(linpred) / (1 + exp(linpred))
# generate C
set.seed(451)
C = rbinom(n, size=1, p=probs)
# true betas for Y
beta0 = log(1)
betaE1 = log(1.17)
betaE2 = log(1.15)
betaE1E2 = log(1.7)
# for generation of Y
linpred = beta0 + betaE1*E1 + betaE2*E2 + betaE1E2*E1*E2
probs = exp(linpred) / (1 + exp(linpred))
set.seed(22)
Y = rbinom(n, size=1, p=probs)
beta0 = log(1)
betaE1 = log(0.95)
betaE2 = log(0.9)
betaE1E2 = log(0.67)
# for generation of Y
linpred = beta0 + betaE1*E1 + betaE2*E2 + betaE1E2*E1*E2
probs = exp(linpred) / (1 + exp(linpred))
set.seed(22)
Y = rbinom(n, size=1, p=probs)
# put in dataframe since the function will need to recode exposures
d = data.frame(E1, E2, Y)
m = glm(Y ~ E1*E2, family=binomial(link="logit"), data=d)
summary(m)
additive_interactions(m, dat=d)
model
model
m = glm(Y ~ E1*E2 + C, family=binomial(link="logit"), data=d)
summary(m)
additive_interactions(m, dat=d)
model
model
c(.85,.9,.95)*(.9*183+10)
.9*183
.9*183+12.5
.9*183+15
c(.85,.9,.95)*(.9*183+15)
